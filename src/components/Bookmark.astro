<button
  x-data="Bookmark"
  x-bind:class="isActive ? ['base','active'] : ['base','inactive']"
  @click.prevent="handleClick($el)"
  class="base">
</button>

<script is:inline>
  function Bookmark() {
    return {
      init() {
        if (
          this.$store.bookmarks.list.some(
            (item) => item.id === this.$el.parentNode.id
          )
        ) {
          this.isActive = true
        }
      },
      handleClick(element) {
        this.isActive = !this.isActive
        this.updateState(element)
      },
      updateState(message) {
        this.$dispatch('update-bookmarks', {
          state: this.isActive,
          info: message,
        })
      },
      isActive: false,
    }
  }
</script>

<style>
  .base {
    @apply bg-no-repeat bg-contain my-4 w-10 h-10 -ml-2 absolute -top-8 right-4 after:absolute after:inset-0 after:bg-white after:-z-10;
  }
  .active {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width="24" height="24" viewBox="0 0 24 24"%3E%3Cpath fill="currentColor" d="M17 3H7c-1.1 0-2 .9-2 2v16l7-3l7 3V5c0-1.1-.9-2-2-2z"%2F%3E%3C%2Fsvg%3E');
  }
  .inactive {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" fill-opacity="0.2" width="24" height="24" viewBox="0 0 24 24"%3E%3Cpath fill="currentColor" d="M17 3H7c-1.1 0-2 .9-2 2v16l7-3l7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"%2F%3E%3C%2Fsvg%3E');
  }

  .inactive:hover {
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width="24" height="24" viewBox="0 0 24 24"%3E%3Cpath fill="currentColor" fill-opacity="0.2" d="M17 3H7c-1.1 0-2 .9-2 2v16l7-3l7 3V5c0-1.1-.9-2-2-2z"%2F%3E%3C%2Fsvg%3E');
  }
</style>
